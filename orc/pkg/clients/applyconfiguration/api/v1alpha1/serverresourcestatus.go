/*
Copyright 2024 The ORC Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ServerResourceStatusApplyConfiguration represents a declarative configuration of the ServerResourceStatus type for use
// with apply.
type ServerResourceStatusApplyConfiguration struct {
	ID               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	HostID           *string `json:"hostID,omitempty"`
	Status           *string `json:"status,omitempty"`
	AccessIPv4       *string `json:"accessIPv4,omitempty"`
	AccessIPv6       *string `json:"accessIPv6,omitempty"`
	ImageID          *string `json:"imageID,omitempty"`
	FlavorID         *string `json:"flavorID,omitempty"`
	Addresses        *string `json:"addresses,omitempty"`
	Metadata         *string `json:"metadata,omitempty"`
	KeyName          *string `json:"keyName,omitempty"`
	SecurityGroupIDs *string `json:"securityGroupIDs,omitempty"`
	Fault            *string `json:"fault,omitempty"`
}

// ServerResourceStatusApplyConfiguration constructs a declarative configuration of the ServerResourceStatus type for use with
// apply.
func ServerResourceStatus() *ServerResourceStatusApplyConfiguration {
	return &ServerResourceStatusApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithID(value string) *ServerResourceStatusApplyConfiguration {
	b.ID = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithName(value string) *ServerResourceStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithHostID sets the HostID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HostID field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithHostID(value string) *ServerResourceStatusApplyConfiguration {
	b.HostID = &value
	return b
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithStatus(value string) *ServerResourceStatusApplyConfiguration {
	b.Status = &value
	return b
}

// WithAccessIPv4 sets the AccessIPv4 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AccessIPv4 field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithAccessIPv4(value string) *ServerResourceStatusApplyConfiguration {
	b.AccessIPv4 = &value
	return b
}

// WithAccessIPv6 sets the AccessIPv6 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AccessIPv6 field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithAccessIPv6(value string) *ServerResourceStatusApplyConfiguration {
	b.AccessIPv6 = &value
	return b
}

// WithImageID sets the ImageID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ImageID field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithImageID(value string) *ServerResourceStatusApplyConfiguration {
	b.ImageID = &value
	return b
}

// WithFlavorID sets the FlavorID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FlavorID field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithFlavorID(value string) *ServerResourceStatusApplyConfiguration {
	b.FlavorID = &value
	return b
}

// WithAddresses sets the Addresses field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Addresses field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithAddresses(value string) *ServerResourceStatusApplyConfiguration {
	b.Addresses = &value
	return b
}

// WithMetadata sets the Metadata field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Metadata field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithMetadata(value string) *ServerResourceStatusApplyConfiguration {
	b.Metadata = &value
	return b
}

// WithKeyName sets the KeyName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the KeyName field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithKeyName(value string) *ServerResourceStatusApplyConfiguration {
	b.KeyName = &value
	return b
}

// WithSecurityGroupIDs sets the SecurityGroupIDs field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecurityGroupIDs field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithSecurityGroupIDs(value string) *ServerResourceStatusApplyConfiguration {
	b.SecurityGroupIDs = &value
	return b
}

// WithFault sets the Fault field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Fault field is set to the value of the last call.
func (b *ServerResourceStatusApplyConfiguration) WithFault(value string) *ServerResourceStatusApplyConfiguration {
	b.Fault = &value
	return b
}
